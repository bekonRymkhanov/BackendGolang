
services:
  python_model_service:
    build:
      context: ./Amazon_Books_Scraping
      dockerfile: Dockerfile
    container_name: python_model_api
    volumes:
      - ./Amazon_Books_Scraping:/app # dev
    # ports:
    #   - "8001:8001"
    networks:
      - book_app_network
    restart: unless-stopped

  go_recommendation_service:
    build:
      context: ./book-recomendation
      dockerfile: Dockerfile
    container_name: go_recommendation_api
    volumes:
      - .:/usr/src/app
    # ports:
    #   - "8080:8080"
    networks:
      - book_app_network
    depends_on:
      - postgres
    restart: unless-stopped

  go_book_service:
    build:
      context: ./book-service
      dockerfile: Dockerfile
    env_file:
      - .env
    container_name: go_book_api
    volumes:
      - .:/usr/src/app
    # ports:
    #   - "4000:4000"
    networks:
      - book_app_network
    depends_on:
      - postgres
    restart: unless-stopped

  angular_frontend_service:
    build:
      context: ./frontAngular
      dockerfile: Dockerfile
    container_name: angular_frontend
    volumes:
      - ./frontAngular:/app 
      - /app/node_modules
    # ports:
    #   - "4200:4200"
    networks:
      - book_app_network
    restart: unless-stopped

  nginx_proxy:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: nginx_reverse_proxy
    ports:
      - "80:80"
    networks:
      - book_app_network
    depends_on:
      - python_model_service
      - go_recommendation_service
      - go_book_service
      - angular_frontend_service
    restart: unless-stopped

  postgres:
    image: postgres:latest
    container_name: postgres
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5433:5432"
    volumes:
      - database_postgres:/var/lib/postgresql/data
    networks:
      - book_app_network


volumes:
  database_postgres:

networks:
  book_app_network:
    driver: bridge